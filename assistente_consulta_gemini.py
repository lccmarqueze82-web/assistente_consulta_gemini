import streamlit as st
from google import genai
from google.genai.errors import APIError

# --- CONFIGURA√á√ÉO INICIAL E CONSTANTES ---
# Define o layout wide para usar mais espa√ßo horizontal
st.set_page_config(page_title="ASSISTENTE DE CONSULTA GEMINI", layout="wide")

# --- AJUSTE CSS PARA REDUZIR ESPA√áO SUPERIOR E MARGENS (OTIMIZA√á√ÉO VERTICAL) ---
# Otimiza√ß√£o do layout para reduzir espa√ßo entre widgets e eliminar rolagem vertical
st.markdown("""
    <style>
    /* Remove espa√ßo padr√£o acima do t√≠tulo (principal ajuste para subir tudo) */
    .block-container {
        padding-top: 1rem;
        padding-bottom: 0rem;
        padding-left: 1rem;
        padding-right: 1rem;
    }
    /* Reduz margens de t√≠tulo e widgets */
    h1 {
        margin-bottom: 0.5rem !important;
    }
    .stText, .stTextArea, .stButton, .stTextInput, .stExpander {
        margin-bottom: 0.5rem !important;
    }
    /* Estilo para padronizar todos os bot√µes (altura fixa de 48px) */
    div.stButton > button {
        width: 100%;
        height: 48px;
        padding-top: 10px !important;
        padding-bottom: 10px !important;
    }
    /* Estilo para a caixa de input de chat (reduzindo altura superior) */
    .stTextInput {
        margin-top: 0.5rem !important;
    }
    </style>
    """, unsafe_allow_html=True)

st.title("ASSISTENTE DE CONSULTA GEMINI")

GEMINI_MODEL = "gemini-2.5-flash"

# --- PROMPTS COMO CONSTANTES (COM REGRAS DE FORMATO FINAL DO PEC) ---

SYSTEM_ROLE_PEC1 = r"""
VOC√ä √â O ASSISTENTE DE DOCUMENTA√á√ÉO CL√çNICA PEC1. SUA √öNICA FUN√á√ÉO √â GERAR O REGISTRO CL√çNICO FINAL. **SIGA AS REGRAS DE FORMATA√á√ÉO E L√ìGICA ESTRITAMENTE**.

**PROIBIDO:** INTRODU√á√ïES, COMENT√ÅRIOS, NUMERA√á√ïES DE ITENS, PERGUNTAS, OU QUALQUER TEXTO FORA DA ESTRUTURA OBRIGAT√ìRIA.

### **1. FORMATO DE SA√çDA OBRIGAT√ìRIO (TEXTO SIMPLES)**

GERE O REGISTRO **INTEIRAMENTE EM CAIXA ALTA** E NESTA ORDEM. **OMITA** A SE√á√ÉO `AVALIA√á√ÉO MULTIDIMENSIONAL` SE N√ÉO FOR APLIC√ÅVEL.

HMA:
HPP:
MUC:
EX FISICO:
AVALIA√á√ÉO MULTIDIMENSIONAL:
EXAMES:
HD:
CONDUTA:

VERIFICA√á√ÉO BEERS / STOPP-START:

GARANTIA DE EST√âTICA: O REGISTRO DEVE SER GERADO INTEGRALMENTE COMO **TEXTO SIMPLES**. **REMOVER TODOS OS CARACTERES MARKDOWN (***, **, #, ETC)**.
**AS REGRAS DE QUEBRA DE LINHA S√ÉO:**
1. **R√ìTULOS DE SE√á√ÉO** (HMA:, HPP:, MUC:, EX FISICO:, EXAMES:, HD:, CONDUTA:, VERIFICA√á√ÉO BEERS / STOPP-START:) DEVEM FICAR EM UNA **LINHA PR√ìPRIA**.
2. O CONTE√öDO DE CADA SE√á√ÉO COME√áA NA LINHA IMEDIATAMENTE ABAIXO DO R√ìTULO.
3. DEVE HAVER **EXATAMENTE UMA LINHA VAZIA** AP√ìS A √öLTIMA LINHA DE CONTE√öDO DE CADA SE√á√ÉO.

### **2. REGRAS DE EXCE√á√ÉO E MARCADORES TEMPORAIS**

* **RENOVA√á√ÉO N√ÉO PRESENCIAL (##01/##02):**
    * **##01:** HMA: "RENOVA√á√ÉO N√ÉO PRESENCIAL DE RECEITA." | EX FISICO: "IMPOSS√çVEL, PACIENTE N√ÉO PRESENTE NO MOMENTO." | CONDUTA: INCLUIR "ORIENTADA A COMPARECER √Ä CONSULTA AGENDADA." E "C√ìDIGO DE √âTICA M√âDICA ‚Äì ARTIGO 37."
    * **##02 (FORA DE √ÅREA):** IGUAL AO ##01, MAS HMA: "RENOVA√á√ÉO N√ÉO PRESENCIAL DE RECEITA; IDENTIFICA√á√ÉO DE PACIENTE FORA DE √ÅREA." | CONDUTA: ADICIONAR "ATUALIZAR ENDERE√áO DO PACIENTE NO CADASTRO."
* **RENOVA√á√ÉO N√ÉO PRESENCIAL CONSECUTIVA (REGRA FINAL):**
    * **SE** O ATENDIMENTO ATUAL FOR **##01 OU ##02 E** O ATENDIMENTO ANTERIOR TAMB√âM FOI **##01 OU ##02**, **ENT√ÉO SUBSTITUA** `HD:` E `CONDUTA:` POR:
        * HD: `SOLICITA√á√ÉO DE RENOVA√á√ÉO N√ÉO PRESENCIAL DE RECEITA MUC (SEGUNDO EPIS√ìDIO).`
        * CONDUTA: `SUGIRO AGENDAMENTO DE CONSULTA PRESENCIAL. C√ìDIGO DE √âTICA M√âDICA ‚Äì ARTIGO 37: √â VEDADO PRESCREVER SEM AVALIA√á√ÉO DIRETA DO PACIENTE, EXCETO EM SITUA√á√ïES DE URG√äNCIA OU EM CASO DE CONTINUIDADE DE TRATAMENTO J√Å INICIADO.`
    * **N√ÉO** APLIQUE CONDUTAS AUTOM√ÅTICAS (‚â•65 ANOS, DM, RASTREIOS) NESTE CASO.

### **3. REGRAS POR SE√á√ÉO**

| SE√á√ÉO | REGRA DE CONTE√öDO E FORMATA√á√ÉO |
| :--- | :--- |
| **HMA** | **ORDEM FIXA (UMA LINHA POR ITEM):** 1. MOTIVO; 2. FORA DE √ÅREA (SE APLIC√ÅVEL); 3. IDADE E SEXO; 4. TEMPO DESDE √öLTIMO ATENDIMENTO; 5. QUEIXAS/SINTOMAS. **PROIBIDO:** INCLUIR GATILHOS GERI√ÅTRICOS. |
| **HPP** | LINHA √öNICA. DOEN√áAS SEPARADAS POR `;`. USAR `DIAGN√ìSTICO (CID-10)` SEMPRE. SE N√ÉO HOUVER: `NEGA COMORBIDADES.` |
| **MUC** | LINHA √öNICA. MEDICAMENTOS SEPARADOS POR `;`. BENZODIAZEP√çNICOS EM **CAIXA ALTA ENTRE PAR√äNTESES SIMPLES**. SE N√ÉO HOUVER: `SEM MEDICAMENTOS DE USO CONT√çNUO.` |
| **EX FISICO** | PRESENCIAL: `BEG, EUPNEICO, LOTE, FC E PA AFERIDAS POR ENFERMAGEM; [ACHADOS].` N√ÉO PRESENCIAL: `IMPOSS√çVEL, PACIENTE N√ÉO PRESENTE NO MOMENTO.` |
| **AVALIA√á√ÉO MULTIDIMENSIONAL** | **REQUISITOS:** APENAS SE (IDADE ‚â•65 ANOS **E** GATILHO GERI√ÅTRICO PRESENTE). USE O MODELO PADR√ÉO. **ALTERE E DESTAQUE** O ACHADO APENAS EM **CAIXA ALTA ENTRE PARENTESES SIMPLES** (EX: (FRAQUEZA EM MEMBROS INFERIORES)). |
| **EXAMES** | LINHA √öNICA. EXAMES ALTERADOS EM **CAIXA ALTA ENTRE PARANTESES SIMPLES**. DATA (MM/AA). MANTER ALTERADOS DE QUALQUER √âPOCA E NORMAIS <1 ANO. CALCULAR CKD-EPI (2021) E CLASSIFICAR DRC SE CREATININA+IDADE+SEXO DISPON√çVEIS. SE N√ÉO HOUVER: `SEM EXAMES DISPON√çVEIS.` |
| **HD** | UM DIAGN√ìSTICO (NOVO OU DESCOMPENSADO) POR LINHA. DIAGN√ìSTICO INCERTO: `*`. |
| **CONDUTA** | UMA A√á√ÉO POR LINHA. **SEMPRE INCLUIR:** `MANTER MEDICAMENTOS DE USO CONT√çNUO.`; `MANTER SOLICITA√á√ïES ANTERIORES EM ANDAMENTO.`. **INCLUIR** CONDUTAS AUTOM√ÅTICAS (‚â•65 ANOS, DM, RASTREIOS - VIDE PROTOCOLO). **JUSTIFICAR TODOS OS `*`** NO FINAL DESTA SE√á√ÉO. |

### **4. ALERTA FARMAC√äUTICO (BEERS / STOPP-START)**

* **APLICAR** ESTA SE√á√ÉO APENAS PARA PACIENTES ‚â•65 ANOS COM MUC.
* USE OS MODELOS DE ALERTA **INICIANDO COM "ALERTA: "** PARA BEERS/STOPP OU **"OMISS√ÉO TERAP√äUTICA: "** PARA START.
"""

SYSTEM_ROLE_SUGESTOES = "Voc√™ √© um assistente m√©dico de IA. Analise cuidadosamente o texto processado, que j√° est√° formatado com o Prompt PEC1, e gere sugest√µes de diagn√≥sticos diferenciais e condutas m√©dicas apropriadas. Seja claro, conciso e use linguagem m√©dica profissional."

SYSTEM_ROLE_CHAT = "Voc√™ √© um assistente de chat geral e prestativo. Responda √† pergunta do usu√°rio. Mantenha o contexto de ser um assistente, mas responda de forma livre."


# --- INICIALIZA√á√ÉO DO CLIENTE GEMINI ---
try:
    # Acessa a chave de API do Gemini a partir dos segredos do Streamlit
    client = genai.Client(api_key=st.secrets["GOOGLE_API_KEY"])
except KeyError:
    st.error("ERRO: Chave 'GOOGLE_API_KEY' n√£o encontrada nos segredos do Streamlit. Por favor, adicione sua chave de API do Gemini em .streamlit/secrets.toml.")
    st.stop()
except Exception as e:
    st.error(f"ERRO ao inicializar o cliente Gemini: {e}")
    st.stop()


# --- FUN√á√ÉO DE CHAMADA DO GEMINI ---
def gemini_reply(system_instruction, text_input):
    """Fun√ß√£o para chamar o modelo Gemini com instru√ß√µes de sistema."""
    
    config = genai.types.GenerateContentConfig(
        system_instruction=system_instruction
    )
    
    try:
        response = client.models.generate_content(
            model=GEMINI_MODEL,
            contents=text_input,
            config=config
        )
        return response.text.strip()
    except APIError as e:
        st.error(f"Erro da API do Gemini: {e}")
        return f"ERRO NA API: {e}"
    except Exception as e:
        st.error(f"Erro inesperado: {e}")
        return f"ERRO INESPERADO: {e}"


# --- INICIALIZA√á√ÉO DO ESTADO DE SESS√ÉO ---
# Inicializa todas as chaves do st.session_state
for key in ["caixa1", "caixa2", "caixa3", "caixa4", "chat_response", "show_manual_copy"]:
    if key not in st.session_state:
        st.session_state[key] = False if key == "show_manual_copy" else ""


# --- FUN√á√ïES DE CALLBACK ---

def clear_fields():
    """Callback para a fun√ß√£o LIMPAR: Reseta todos os campos de estado da sess√£o."""
    for key in ["caixa1","caixa2","caixa3","caixa4", "chat_response", "show_manual_copy"]:
        # Reset para valor vazio ou False
        st.session_state[key] = "" if key != "show_manual_copy" else False

def apply_pec1():
    """Callback para a Etapa 2: Aplica Prompt PEC1 e atualiza Caixa 2."""
    if not st.session_state.get("caixa1"):
        st.warning("A Caixa 1 est√° vazia. Insira a informa√ß√£o crua primeiro.")
        return

    st.session_state["show_manual_copy"] = False

    with st.spinner("Aplicando Prompt PEC1..."):
        st.session_state["caixa2"] = gemini_reply(
            SYSTEM_ROLE_PEC1,
            st.session_state["caixa1"]
        )
        # st.success("Prompt aplicado!", icon="‚úÖ") # Mensagem de sucesso opcional

def generate_suggestions():
    """Callback para a Etapa 3: Gerar Sugest√µes e atualizar Caixa 3."""
    if not st.session_state.get("caixa2"):
        st.warning("A Caixa 2 est√° vazia. Aplique o Prompt PEC1 (Etapa 2) primeiro.")
        return

    st.session_state["show_manual_copy"] = False

    with st.spinner("Analisando diagn√≥stico..."):
        st.session_state["caixa3"] = gemini_reply(
            SYSTEM_ROLE_SUGESTOES,
            st.session_state["caixa2"]
        )
        # st.success("Sugest√µes geradas!", icon="üí°") # Mensagem de sucesso opcional

def send_chat():
    """Callback para a Etapa 4: Chat Livre e exibe resposta no Markdown."""
    if not st.session_state.get("caixa4"):
        st.warning("A Caixa 4 est√° vazia. Digite sua pergunta.")
        return

    st.session_state["show_manual_copy"] = False

    with st.spinner("Respondendo..."):
        resposta = gemini_reply(SYSTEM_ROLE_CHAT, st.session_state["caixa4"])
        st.session_state["chat_response"] = resposta

def copy_caixa2_content():
    """Inverte a flag para exibir/ocultar o bloco de c√≥pia (st.text_area disabled)."""
    st.session_state["show_manual_copy"] = not st.session_state.get("show_manual_copy", False)


# --- MARCADOR E EXPANDER DAS REGRAS ---

st.markdown("---")

# Expander para as regras
with st.expander("Ver Regras Completas do Prompt PEC1"):
    st.code(SYSTEM_ROLE_PEC1, language="markdown")


# --- LAYOUT DAS CAIXAS DE TEXTO ---
col1, col2, col3 = st.columns(3)

# ALTURA OTIMIZADA PARA 120PX (REDUZINDO ESPA√áO)
OPTIMIZED_HEIGHT = 120

with col1:
    st.text_area("SOAP (Informa√ß√£o Crua)", height=OPTIMIZED_HEIGHT, key="caixa1",
                 help="Insira aqui o texto de entrada (anota√ß√µes, dados brutos, etc.)")

with col2:
    st.text_area("CORRIGIDO (Formato PEC1)", height=OPTIMIZED_HEIGHT, key="caixa2",
                 help="Sa√≠da formatada do Gemini conforme as regras PEC1. Use o bot√£o 'COPIAR' para obter o texto puro.")

with col3:
    st.text_area("Sugest√µes e Discuss√£o", height=OPTIMIZED_HEIGHT, key="caixa3",
                 help="Sugest√µes de diagn√≥sticos, condutas e discuss√£o geradas pelo Gemini.")

st.markdown("---")

# --- LAYOUT DOS BOT√ïES DE CONTROLE ---
# Colunas para alinhar e padronizar bot√µes
colA, colB, colC, colD = st.columns(4)

# Verifica conte√∫do para habilitar/desabilitar bot√µes
caixa1_has_content = bool(st.session_state.get("caixa1", "").strip())
caixa2_has_content = bool(st.session_state.get("caixa2", "").strip())
caixa4_has_content = bool(st.session_state.get("caixa4", "").strip())

with colA:
    st.button("LIMPAR TUDO", on_click=clear_fields)

with colB:
    label_copy = "OCULTAR C√ìPIA" if st.session_state.get("show_manual_copy") else "COPIAR"
    st.button(label_copy, on_click=copy_caixa2_content, disabled=not caixa2_has_content,
              help="Alterna a visualiza√ß√£o de um campo de texto com bot√£o de c√≥pia nativo (texto puro).")

with colC:
    st.button("APLICAR PEC1", on_click=apply_pec1,
              disabled=not caixa1_has_content, help="Aplica o prompt de formata√ß√£o PEC1 na Caixa 1 e envia para a Caixa 'CORRIGIDO'.")

with colD:
    st.button("GERAR SUGEST√ïES", on_click=generate_suggestions,
              disabled=not caixa2_has_content, help="Gera sugest√µes de diagn√≥stico e conduta com base no texto da Caixa 'CORRIGIDO'.")


# --- EXIBI√á√ÉO DO BLOCO DE C√ìPIA (USANDO ST.TEXT_AREA DESABILITADO) ---
if st.session_state.get("show_manual_copy") and caixa2_has_content:
    st.markdown("### Bloco de C√≥pia - Formato Final (CORRIGIDO)")
    st.info("O texto abaixo est√° no formato Texto Simples exigido pelo PEC. **Use o bot√£o de c√≥pia (dois quadrados) no canto superior direito do campo** para garantir que o texto e as quebras de linha sejam copiados corretamente.")

    # Ajusta a altura dinamicamente para melhor visualiza√ß√£o (min: 150px, max: 600px)
    text_length = len(st.session_state["caixa2"].split('\n')) * 22
    # Ajustei o m√≠nimo para 150px, mantendo o m√°ximo para n√£o estourar a tela com um registro gigantesco
    copy_height = max(150, min(600, text_length))

    # O st.text_area desabilitado √© a melhor forma de garantir a c√≥pia literal de texto puro
    st.text_area(
        "C√≥pia Final",
        value=st.session_state["caixa2"],
        height=copy_height,
        key="caixa2_copy_block",
        disabled=True,
        label_visibility="collapsed"
    )
elif st.session_state.get("show_manual_copy") and not caixa2_has_content:
    # Se o bot√£o foi clicado, mas a caixa 2 est√° vazia
    st.warning("A Caixa CORRIGIDO est√° vazia. N√£o h√° conte√∫do para copiar.")
    st.session_state["show_manual_copy"] = False


# --- CHAT LIVRE (CAIXA 4) E BOT√ÉO DE ENVIO ---
st.markdown("---")

colE, colF = st.columns([5, 1])

with colE:
    # A visibilidade do label est√° oculta, o placeholder guia o usu√°rio
    st.text_input("Pergunta para o Gemini", key="caixa4", label_visibility="collapsed",
                  placeholder="Chat Livre: Digite sua pergunta (ex: 'Qual a dose m√°xima de metformina?')",
                  help="Digite sua pergunta livre para o Gemini.")

with colF:
    # Ajuste de layout manual para o bot√£o ENVIAR (para alinhar com o text_input)
    # A margem superior no CSS j√° ajuda a alinhar, aqui s√≥ garantimos o espa√ßo.
    st.markdown("<div style='height: 10px;'></div>", unsafe_allow_html=True)
    st.button("ENVIAR", on_click=send_chat, disabled=not caixa4_has_content, key="chat-button")

# --- EXIBI√á√ÉO DO RESULTADO DO CHAT (Etapa 4) ---
if st.session_state.get("chat_response"):
    st.markdown("---")
    # Para o chat, mantemos o st.markdown para renderizar a formata√ß√£o da resposta do Gemini
    st.markdown(f"**Gemini Responde:** {st.session_state['chat_response']}")
    st.markdown("---")
